grafana:
  namespace: monitoring
  createDashboards: false

heplifyServer:
  image: ghcr.io/sipcapture/heplify-server:latest

  service:
    type: ClusterIP
    labels: {}
    annotations: {}

  db:
    username: postgres
    password: homerSeven

  config: |
    {{- $secret := (fromYaml (include (print $.Template.BasePath "/heplify-server/secret.yaml") . )).data -}}
    {{- $dbUsername := (index $secret "dbUsername" | b64dec) -}}
    {{- $dbPassword := (index $secret "dbPassword" | b64dec) -}}
    HEPAddr               = "0.0.0.0:9060"
    HEPTCPAddr            = "0.0.0.0:9060"
    HEPTLSAddr            = "0.0.0.0:9061"
    HEPWSAddr             = "0.0.0.0:3000"
    ESAddr                = ""
    ESDiscovery           = true
    LokiURL               = ""
    LokiBulk              = 200
    LokiTimer             = 4
    LokiBuffer            = 100000
    LokiHEPFilter         = [1,5,100]
    LokiAllowOutOfOrder   = false
    ForceHEPPayload	      = []
    PromAddr              = "0.0.0.0:9096"
    PromTargetIP          = ""
    PromTargetName        = ""
    DBShema               = "homer7"
    DBDriver              = "postgres"
    DBAddr                = "{{ printf "%s:%s" .Values.postgresql.host ( toString .Values.postgresql.port) }}"
    DBUser                = "{{ $dbUsername }}"
    DBPass                = "{{ $dbPassword }}"
    DBDataTable           = "homer_data"
    DBConfTable           = "homer_config"
    DBBulk                = 200
    DBTimer               = 4
    DBBuffer              = 400000
    DBWorker              = 8
    DBRotate              = true
    DBPartLog             = "2h"
    DBPartSip             = "1h"
    DBPartQos             = "6h"
    DBDropDays            = 14
    DBDropDaysCall        = 0
    DBDropDaysRegister    = 0
    DBDropDaysDefault     = 0
    DBDropOnStart         = false
    DBUsageProtection     = true
    DBUsageScheme         = "percentage"
    DBPercentageUsage     = "80%"
    DBMaxSize             = "30MB"
    Dedup                 = false
    DiscardMethod         = []
    AlegIDs               = []
    CustomHeader          = []
    SIPHeader             = []
    LogDbg                = ""
    LogLvl                = "info"
    LogStd                = true
    LogSys                = false
    Config                = "./heplify-server.toml"
    ConfigHTTPAddr        = ""

    # Examples:
    # -------------------------------------
    # ESAddr          = "http://127.0.0.1:9200"
    # DBShema         = "homer7"
    # DBDriver        = "postgres"
    # LokiURL         = "http://localhost:3100/api/prom/push"
    # LokiHEPFilter   = [1,5,100]
    # PromAddr        = "0.0.0.0:8899"
    # PromTargetIP    = "10.1.2.111,10.1.2.4,10.1.2.5,10.1.2.6,10.12.44.222"
    # PromTargetName  = "sbc_access,sbc_core,kamailio,asterisk,pstn_gateway"
    # AlegIDs         = ["X-CID","P-Charging-Vector,icid-value=\"?(.*?)(?:\"|;|$)","X-BroadWorks-Correlation-Info"]
    # DiscardMethod   = ["OPTIONS","NOTIFY"]
    # CustomHeader    = ["X-CustomerIP","X-Billing"]
    # SIPHeader       = ["callid","callid_aleg","method","ruri_user","ruri_domain","from_user","from_domain","from_tag","to_user","to_domain","to_tag","via","contact_user"]
    # LogDbg          = "hep,sql,loki"
    # LogLvl          = "warning"
    # ConfigHTTPAddr  = "0.0.0.0:9876"
    # -------------------------------------
    # To hot reload PromTargetIP and PromTargetName run:
    # killall -HUP heplify-server

  podMonitor:
    enable: true
    labels:
      release: prom-stack
    interval: 10s
    scrapeTimeout: 5s


homer: 
  image: ghcr.io/sipcapture/homer-app:latest

  ingress:
    enabled: false
    hostname: homer.local
    secretName: ""
    class: ""
    labels: {}
    annotations: {}

  admin:
    username: admin
    password: sipcapture

  db:
    username: postgres
    password: homerSeven

  config: |-
    {{- $secret := (fromYaml (include (print $.Template.BasePath "/homer-webapp/secret.yaml") . )).data -}}
    {{- $dbUsername := (index $secret "dbUsername" | b64dec) -}}
    {{- $dbPassword := (index $secret "dbPassword" | b64dec) -}}
    {
      "api_settings": {
        "add_captid_to_resolve": false,
        "enable_token_access": false
      },
      "auth_settings": {
        "_comment": "The type param can be internal, ldap, http_auth",
        "_jwt_help": "Please generate own jwt secret using uuid or the flag generate-jwt-secret",
        "auth_token_header": "Auth-Token",
        "gravatar": false,
        "gravatar_url": "https://www.gravatar.com/avatar/%s.jpg",
        "jwt_secret": "14274350-0bba-43e3-b3fc-944eb39b3f72",
        "token_expire": 1200,
        "type": "internal",
        "user_groups": [
          "admin",
          "user",
          "support"
        ]
      },
      "dashboard_settings": {
        "_comment": "Here you can define a customs dashboards home",
        "dashboard_home": "/usr/local/homer/etc/dashboard_home.json"
      },
      "database_config": {
        "help": "Settings for PGSQL Database (settings)",
        "host": "{{ .Values.postgresql.host }}",
        "keepalive": true,
        "name": "homer_config",
        "node": "LocalConfig",
        "pass": "{{ $dbPassword }}",
        "user": "{{ $dbUsername }}"
      },
      "database_data": {
        "localnode": {
          "help": "Settings for PGSQL Database (data)",
          "host": "{{ .Values.postgresql.host }}",
          "keepalive": true,
          "name": "homer_data",
          "node": "LocalNode",
          "pass": "{{ $dbPassword }}",
          "user": "{{ $dbUsername }}"
        }
      },
      "decoder_shark": {
        "_comment": "Here you can do packet decoding using tshark application. Please define uid, gid if you run the app under root",
        "active": false,
        "bin": "/usr/bin/tshark",
        "protocols": [
          "1_call",
          "1_registration",
          "1_default"
        ]
      },
      "grafana_config": {
        "enable": true,
        "help": "Settings for Grafana",
        "host": "http://prom-stack-grafana.monitoring.svc.cluster.local",
        "path": "/",
        "proxy_check": "simple",
        "proxy_control": false,
        "token": ""
      },
      "hep_relay": {
        "help": "UDP socket to send HEP data on",
        "host": "heplify-server",
        "port": 9060
      },
      "http_auth": {
        "skipverify": true,
        "url": "http://localhost:1323"
      },
      "http_settings": {
        "debug": false,
        "gzip": true,
        "gzip_static": true,
        "help": "Settings for the HOMER Webapp Server. If you have gzip_static = false, please be sure that your dist directory has uncompressed .js files",
        "host": "0.0.0.0",
        "path": "/",
        "port": 9080,
        "root": "/usr/local/homer/dist"
      },
      "https_settings": {
        "cert": "/usr/local/homer/tls/cert.pem",
        "enable": false,
        "help": "SSL settings for homer-app",
        "host": "0.0.0.0",
        "key": "/usr/local/homer/tls/key.pem",
        "min_tls_version": "1.2",
        "port": 9443,
        "use_mozilla_profile": true
      },
      "influxdb_config": {
        "database": "homer",
        "enable": false,
        "help": "Settings for InfluxDB Database (optional)",
        "host": "http://influxdb:8086",
        "name": "homer_config",
        "pass": "influx_password",
        "policy": "autogen",
        "user": "influx_user"
      },
      "ldap_config": {
        "admingroup": "admin",
        "adminmode": true,
        "anonymous": false,
        "attributes": [
          "dn",
          "givenName",
          "sn",
          "mail",
          "uid"
        ],
        "base": "dc=example,dc=com",
        "binddn": "uid=readonlysuer,ou=People,dc=example,dc=com",
        "bindpassword": "readonlypassword",
        "group_attributes": [
          "cn",
          "memberOf",
          "GroupAttribute",
          "distinguishedName",
          "dn",
          "member"
        ],
        "groupfilter": "(memberUid=%s)",
        "host": "ldap.example.com",
        "port": 389,
        "skiptls": true,
        "skipverify": true,
        "userdn": "uid=%s,ou=People,dc=example,dc=com",
        "userfilter": "(uid=%s)",
        "usergroup": "HOMER_user",
        "usermode": true,
        "usessl": false
      },
      "loki_config": {
        "api": "loki/api/v1",
        "enable": false,
        "external_url": "",
        "help": "Settings for LOKI Database (optional)",
        "host": "http://127.0.0.1:3100",
        "param_query": "query_range",
        "password": "admin",
        "regexp": false,
        "template": "{job=\"heplify-server\"} |~ \"%callid%\"",
        "user": "admin"
      },
      "oauth2": {
        "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
        "auth_style": 1,
        "auth_uri": "https://accounts.google.com/o/oauth2/auth",
        "client_id": "1234565",
        "client_secret": "FAKE",
        "enable": false,
        "grant_type": "authorization_code",
        "gravatar": false,
        "gravatar_url": "https://www.gravatar.com/avatar/%s.jpg",
        "profile_url": "https://www.googleapis.com/oauth2/v1/userinfo",
        "project_id": "Homer OAuth",
        "provider_image": "",
        "provider_name": "google",
        "redirect_uri": "http://localhost:80/api/v3/oauth2/auth",
        "response_type": "code",
        "scope": [
          "email",
          "openid",
          "profile"
        ],
        "service_redirect": "/api/v3/oauth2/redirect",
        "token_uri": "https://oauth2.googleapis.com/token",
        "user_token": "RandomURLSafeStringWithAMinimumLengthOf43Characters"
      },
      "prometheus_config": {
        "api": "api/v1",
        "enable": true,
        "help": "Settings for Prometheus Database (optional)",
        "host": "http://prom-stack-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090",
        "pass": "",
        "user": ""
      },
      "swagger": {
        "api_host": "127.0.0.1:9080",
        "api_json": "/usr/local/homer/etc/swagger.json",
        "enable": true
      },
      "system_settings": {
        "_loglevels": "can be: fatal, error, warn, info, debug, trace",
        "help": "Settings for HOMER logs",
        "hostname": "",
        "loglevel": "info",
        "logname": "homer-app.log",
        "logpath": "/usr/local/homer/log",
        "logstdout": false,
        "uuid": ""
      },
      "transaction_settings": {
        "deduplicate": {
          "global": false
        }
      }
    }

postgresql:
  deploy: true
  host: postgresql
  port: 5432
  fullnameOverride: postgresql
  auth:
    postgresPassword: "homerSeven"
  persistence:
    size: 8Gi
